msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

msgid ""
"---\n"
"title: \"@@ operator for non jsonb types\"\n"
"upper_level: ../\n"
"---"
msgstr ""
"---\n"
"title: \"jsonb型以外の型用の@@演算子\"\n"
"upper_level: ../\n"
"---"

msgid "# `@@` operator for non `jsonb` types"
msgstr "# `jsonb`型以外の型用の`@@`演算子"

msgid ""
"This operator is deprecated since 1.2.0. Use [`&@*` operator][query-v2] instea"
"d."
msgstr "この演算子は1.2.0から非推奨です。代わりに[`&@~`演算子][query-v2]を使ってください。"

msgid "## Summary"
msgstr "## 概要"

msgid "`@@` operator performs full text search with query."
msgstr "`@@`演算子はクエリーを使って全文検索を実行します。"

msgid ""
"Query's syntax is similar to syntax that is used in Web search engine. For exa"
"mple, you can use OR search by `KEYWORD1 OR KEYWORD2` in query.\n"
"Note that `KEYWORD1 KEYWORD2` means `KEYWORD1 AND KEYWORD2` in query."
msgstr ""
"クエリーの構文はWeb検索エンジンで使われている構文と似ています。たとえば、クエリーで`キーワード1 OR キーワード2`と書くとOR検索できます。`KEY"
"WORD1 KEYWORD2` は `KEYWORD1 AND KEYWORD2` というクエリーを意味することに注意してください。"

msgid "## Syntax"
msgstr "## 構文"

msgid ""
"```sql\n"
"column @@ query\n"
"```"
msgstr ""

msgid ""
"`column` is a column to be searched. It's `text` type, `text[]` type or `varch"
"ar` type."
msgstr "`column`は検索対象のカラムです。型は`text`型、`text[]`型、`varchar`型のどれかです。"

msgid ""
"`query` is a query for full text search. It's `text` type for `text` type or `"
"text[]` type `column`. It's `varchar` type for `varchar` type `column`."
msgstr ""
"`query`は全文検索用のクエリーです。`column`が`text`型または`text[]`型なら`query`は`text`型です。`column`が"
"`varchar`型なら`query`は`varchar`型です。"

msgid "[Groonga's query syntax][groonga-query-syntax] is used in `query`."
msgstr "`qeury`では[Groongaのクエリー構文][groonga-query-syntax]を使います。"

msgid "## Operator classes"
msgstr "## 演算子クラス"

msgid ""
"You need to specify one of the following operator classes to use this operator"
":"
msgstr "この演算子を使うには次のどれかの演算子クラスを指定する必要があります。"

msgid "  * `pgroonga_text_full_text_search_ops_v2`: Default for `text`"
msgstr "  * `pgroonga_text_full_text_search_ops_v2`：`text`型のデフォルト"

msgid "  * `pgroonga_text_array_full_text_search_ops_v2`: Default for `text[]`"
msgstr "  * `pgroonga_text_array_full_text_search_ops_v2`：`text[]`型のデフォルト"

msgid "  * `pgroonga_varchar_full_text_search_ops_v2`: For `varchar`"
msgstr "  * `pgroonga_varchar_full_text_search_ops_v2`：`varchar`用"

msgid "  * `pgroonga_text_full_text_search_ops`: For `text`"
msgstr "  * `pgroonga_text_full_text_search_ops`：`text`用"

msgid "  * `pgroonga_text_array_full_text_search_ops`: For `text[]`"
msgstr "  * `pgroonga_text_array_full_text_search_ops`：`text[]`用"

msgid "  * `pgroonga_varchar_full_text_search_ops`: For `varchar`"
msgstr "  * `pgroonga_varchar_full_text_search_ops`：`varchar`用"

msgid "## Usage"
msgstr "## 使い方"

msgid "Here are sample schema and data for examples:"
msgstr "例に使うサンプルスキーマとデータは次の通りです。"

msgid ""
"```sql\n"
"CREATE TABLE memos (\n"
"  id integer,\n"
"  content text\n"
");"
msgstr ""

msgid ""
"CREATE INDEX pgroonga_content_index ON memos USING pgroonga (content);\n"
"```"
msgstr ""

msgid ""
"```sql\n"
"INSERT INTO memos VALUES (1, 'PostgreSQL is a relational database management s"
"ystem.');\n"
"INSERT INTO memos VALUES (2, 'Groonga is a fast full text search engine that s"
"upports all languages.');\n"
"INSERT INTO memos VALUES (3, 'PGroonga is a PostgreSQL extension that uses Gro"
"onga as index.');\n"
"INSERT INTO memos VALUES (4, 'There is groonga command.');\n"
"```"
msgstr ""
"```sql\n"
"INSERT INTO memos VALUES (1, 'PostgreSQLはリレーショナル・データベース管理システムです。');\n"
"INSERT INTO memos VALUES (2, 'Groongaは日本語対応の高速な全文検索エンジンです。');\n"
"INSERT INTO memos VALUES (3, 'PGroongaはインデックスとしてGroongaを使うためのPostgreSQLの拡張機能です"
"。');\n"
"INSERT INTO memos VALUES (4, 'groongaコマンドがあります。');\n"
"```"

msgid ""
"You can perform full text search with multiple keywords by `@@` operator like "
"`KEYWORD1 KEYWORD2`. You can also do OR search by `KEYWORD1 OR KEYWORD2`:"
msgstr ""
"`@@`演算子を使うと`キーワード1 キーワード2`のように複数のキーワードを指定して全文検索できます。`キーワード1 OR キーワード2`のようにOR検索"
"することもできます。"

msgid ""
"```sql\n"
"SELECT * FROM memos WHERE content @@ 'PGroonga OR PostgreSQL';\n"
"--  id |                            content                             \n"
"-- ----+----------------------------------------------------------------\n"
"--   3 | PGroonga is a PostgreSQL extension that uses Groonga as index.\n"
"--   1 | PostgreSQL is a relational database management system.\n"
"-- (2 rows)\n"
"```"
msgstr ""
"```sql\n"
"SELECT * FROM memos WHERE content @@ 'PGroonga OR PostgreSQL';\n"
"--  id |                                  content\n"
"-- ----+----------------------------------------------------------------------"
"-----\n"
"--   3 | PGroongaはインデックスとしてGroongaを使うためのPostgreSQLの拡張機能です。\n"
"--   1 | PostgreSQLはリレーショナル・データベース管理システムです。\n"
"-- (2 rows)\n"
"```"

msgid "See [Groonga document][groonga-query-syntax] for query syntax details."
msgstr "クエリーの構文の詳細は[Groongaのドキュメント][groonga-query-syntax]を参照してください。"

msgid ""
"Note that you can't use syntax that starts with `COLUMN_NAME:` like `COLUMN_NA"
"ME:@KEYWORD`. It's disabled in PGroonga."
msgstr "`カラム名:@キーワード`のように`カラム名:`から始まる構文を使うことはできません。これはPGroongaで無効にしています。"

msgid ""
"You can't use `COLUMN_NAME:^VALUE` for prefix search. You need to use `VALUE*`"
" for prefix search."
msgstr "前方一致検索のために`カラム名:^値`という構文を使うことができません。前方一致検索には`値*`を使ってください。"

msgid "## Sequential scan"
msgstr "## シーケンシャルスキャン"

msgid "TODO: Describe about `SET search_path = \"$user\",public,pgroonga,pg_catalog;`."
msgstr ""

msgid "## See also"
msgstr "## 参考"

msgid "  * [`&@` operator][match-v2]: Full text search by a keyword"
msgstr "  * [`&@`演算子][match-v2]：キーワード1つでの全文検索"

msgid "  * [Groonga's query syntax][groonga-query-syntax]"
msgstr "  * [Groongaのクエリーの構文][groonga-query-syntax]"

msgid "[match-v2]:match-v2.html"
msgstr ""

msgid "[query-v2]:query-v2.html"
msgstr ""

msgid ""
"[groonga-query-syntax]:http://groonga.org/docs/reference/grn_expr/query_syntax"
".html"
msgstr ""
"[groonga-query-syntax]:http://groonga.org/ja/docs/reference/grn_expr/query_syn"
"tax.html"
